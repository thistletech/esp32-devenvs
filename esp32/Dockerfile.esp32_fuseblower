# Docker image used to build and sign ESP-IDF images for SBV2 in development
#
# WARNING: DON'T use the default SBV2_PRIVATE_KEY in production!!!
#
# To build Docker image, call `docker build` from the current directory of this
# file
#
# Reference:
# - https://docs.espressif.com/projects/esp-idf/en/latest/esp32/get-started/linux-macos-setup.html
FROM ghcr.io/thistletech/devenv_idf_base:7444a5629e029501fee055d92a32fdffc0119df0

# sdkconfig file used to build IDF apps (non-MCUBoot), for secure boot related
# stuff
ARG IDF_SDKCONFIG="sdkconfig.sbv2_nojtag"
# Private key used to sign SBV2 images during build. Key file must be under keys
ARG SBV2_PRIVATE_KEY="sbv2_private_dev.pem"

COPY --chown=esp:dialout keys/${SBV2_PRIVATE_KEY} ${HOME}/keys/sbv2_private.pem
COPY --chown=esp:dialout configs ${HOME}/configs
COPY --chown=esp:dialout apps ${HOME}/apps

# Build void app, sign using private key PEM file
RUN cd ${HOME} && \
    . esp-idf/export.sh && \
    cd ${HOME}/apps && \
    ln -sf ../configs/${IDF_SDKCONFIG} sdkconfig.apps && \
    ln -sf ../keys/sbv2_private.pem sbv2_private_pem.app && \
    cd ${HOME}/apps/void_app && \
    idf.py set-target esp32 && \
    idf.py build

CMD ["/bin/bash"]
